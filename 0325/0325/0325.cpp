// 0325.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>
using namespace std;

/// typedef A B ==> A 자료형을 앞으로 B로 사용하겠다.
/// #define은 상수를 선언하는 전처리기 문장
#define PI 3.14     /// #define A B ==> PI를 3.14로 사용하겠다.
//#define 3.14 PI     /// #define A B ==> 3.14를 PI로 사용하겠다.
/// #define FUNCTION( ) ==> 매크로 함수 : 특별한 용도가 아니면 사용하지 말것!!!
#define SWAP(a, b) { a ^= b; b ^= a; a ^= b; }

int main()
{
    int a = 0;

    /// 예약어( ) ;
    /// Ex) if( ), switch( ), for( ), while( )
    /// 바로 뒤에 위치하는 한문장만 해당 예약어의 소유이다.

    /// if( )문장 사용시에 주의해야 할점!!!
    /// if( 비교하려는 상수 = 비교할 변수 ) 문장 완성 형태
    /// if (a = 1) : 이렇게 사용하지 말것!
    /// a = 1; 대입 연산이 먼저 발생! 연산 결과로 a만 남게 되는 상황
    /// if( a )
    if (1 == a)
    {
        printf("a == 1\n");
    }
    else
    {
        printf("a != 1\n");
    }

    /// 삼항 연산자 : ?
    /// 형식 : (조건식) ? 참인 경우 실행할 문장 : 거짓인 경우 실행할 문장 ;
    ///            1항               2항                    3항
    (1 == a) ? printf("1) 1 == a\n") : printf("1) 1 != a\n");

    /// sizeof( ) 연산자 : 자료형이나 변수의 메모리 할당 크기를 바이트 단위로 알려준다.
    /// sizeof( 자료형 또는 변수명 )
    /// sizeof( ) 결과는 printf를 사용할 때 zd를 사용한다.
    printf("sizeof : %zd %zd %zd\n", sizeof(__int64), sizeof(__int32), sizeof(a));

    /// 범위 (지정) 연산자 - ::
    /// 네임 스페이스 :: 네임 스페이스에 등록된 API/함수/인터페이스
    std::cout << "Hello World!\n";

    /// 형변환 : 자료형의 크기나 종류 등을 변경하는 것을 의미한다.
    ///     특징 - 명시/암시/묵시적 형변환을 수행하면 반드시 정보의 손실이 발생.
    /// 1) 명시적 형변환 : 프로그래머가 자료형이 변경되는 것을 알고 명시적으로 알림.
    ///     Ex) int a = 3; char c = (char)a;
    ///             ==> 컴파일러에게 알림.
    /// 2) 암시적/묵시적 형변환 : 프로그래머가 의도하지 않은 상황을 발생시킬 수 있다.
    ///             ==> 왜?
    ///     Ex) int a = 3; char c = a;
    /// 
    int k = 9;
    if (0)      /// 조건식의 결과가 거짓
    {       /// ==> 포함된 여러 문장들을 하나의 문장으로 처리
        /// if( )가 갖는 특징 : 뒤에 한문장은 조건식 결과가 참인 경우 실행
        printf("0 = 1\n");      /// if( )의 소유
        /// if( )의 소유가 아닌 코드의 시작부분.
        printf("0 = 2\n");      /// if( )의 소유

        int k = 5;
    }
    printf("0 = 3\n");
    printf("K : %d\n", k);

    int i = 8;
    int j = 9;
LABEL:
    /// if( ) 문장 뒤에 SWAP( )함수가 하나의 문장으로 보임!
    if (0)
    {
ASDF:
        SWAP(i, j);
    }
KKK:
    /*
        a ^= b;     /// if( )의 소유
        b ^= a;     /// if( )의 소유가 아님!
        a ^= b;     /// if( )의 소유가 아님!
    */
    printf("i[ %d ] j[ %d ]\n", i, j);

    /// switch~case 문은 특별한 경우가 아니라면 절대 사용하지 말것!
    /// 동일한 코드를 if~else if~else~~ 변경했을때, 속도가 몇배가 빠름!!!
    /// if 문장이 훨씬 빠름.
    /// switch( 변수, 식, 문장 )
    /// {
    ///     case 1:         /// 라벨/레이블
    ///                     /// 이 위치를 가리키는 정보(주소)만 포함
    ///     {
    ///         ~; ~; ~; ~;
    ///     }
    ///         break;      /// 나를 포함한 가장 가까운 {, }를 빠져나간다.
    ///     case 상수:
    ///         break;
    ///     /// 어떠한 상수와도 값이 일치하지 않는 경우
    ///     default:        /// 사용하지 않아도 문제 없다. XXXXX
    ///                     /// switch~case에서는 default를 반드시 사용할 것!
    ///         break;
    /// }

    for (i = 10, j = 0, a = 100; i < a; i++, j--, a += 10);

    /// for( 초기식 ; 조건식 ; 증감식 )
    ///     - 초기식 : 반복문에서 사용할 여러 변수를 초기화
    ///     - 조건식 : if( )과 같이 참과 거짓을 판별할 수 있는 문장
    ///     - 증감식 : 반복에 영향을 미치는 값(들)을 변화
    /// {
    /// 
    /// }

}