// 0401.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>

int main()
{
    /// for( 초기식(1) ; 조건식(2) ; 증감식/제어식(3) ) { 반복 내용 (4) }
    ///     실행 순서 : (1) ==> (2) ==> (4) ==> (3) ==> (2) ==> ...
    ///                 ... ==> (3) ==> (2) ==> (4) ==> ...
    ///                 ... ==> (3) ==> (2) ==> (4) ==> ...
    ///                 ... ==> (3) ==> (2) 조건이 거짓 ==> 반복 종료
    /// 
    /// 반복문의 3대 요소
    /// 1) 초기식 : 반복의 시작 값에 따라 처리 값이 달라짐.
    /// 2) 조건식 : 반복의 종료 조건을 결정.
    /// 3) 증감식/제어식 : 종료 조건에 영향을 미친다.
    /// 
    /// 반복 문장의 용도
    /// for( ) : 정확하게 반복 횟수를 알 수 있거나 예측 가능한 경우
    /// while( ) : 무한 반복에 가장 좋음 ==> while(1)
    /// do~while( ) : 다수 조건을 한꺼번에 비교할때 가장 좋음.

    int event1 = 1;
    int event2 = 0;
    int event3 = 1;
    int event4 = 1;

    do
    {
        if (0 == event1)
        {
            printf("1번 불만족\n");
            break;
        }

        if (0 == event2)
        {
            printf("2번 불만족\n");
            break;
        }

        if (0 == event3)
        {
            printf("3번 불만족\n");
            break;
        }

        if (0 == event4)
        {
            printf("4번 불만족\n");
            break;
        }
        //// 이벤트 조건을 모두 만족한 상태
        printf("NPC : 자 이벤트 퀘스트야... 가서 일하렴\n");
        return 0;
    } while (0);;;;;;;;;;;;;;;;;;;;
    /// 조건을 만족하지 않는다.
    printf("NPC: 너는 아직 준비가 안됐다\n");

    /// 99단 출력 반복 프로그램
    for (int i = 4; i <= 10; i+=2)
    {
        for (int j = 1; j < 10; j++)
        {
            printf("%d * %d = %d\n", i, j, i * j);
        }
        printf("\n");
        i++;
    }


    /// 별 출력
    for (int i = 0; i < 5; i++)     // 0, 1, 2, 3, 4
    {                              // +1 +1 +1 +1 +1

        // continue;        /// 아무것도 실행되지 않는다.
        /// 공백 출력 반복문
        for (int j = 0; j < i; j++)  // 1, 2, 3, 4, 5
        {
            // continue;        /// 공백이 출력되지 않는다.
            printf("-");
            // continue;        /// 의미가 없음. 다시 처음으로 이동하기 때문.
        }
        //continue;           /// 줄바꿈과 별이 출력되지 않는다.
        /// 별 출력 반복문
        for (int k = 0; k < 5 - i; k++)  // 1, 2, 3, 4, 5
        {
            printf("*");
        }
        printf("\n");
    }

    /// break : 가장 가까운 반복/제어문의 {, }를 빠져나간다.
    //{ { { { { { { { { { { break; } } } } } } } } } } }
    /// continue : 가장 가까운 반복/제어문의 시작 위치로 이동한다.


    std::cout << "Hello World!\n";
}
